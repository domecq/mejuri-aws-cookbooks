map $http_user_agent $device {
    default 'pc';
    ~(iPhone|Android|Mobile|iPad) 'mobile';
}

log_format cache_status '[$time_local] $remote_addr "$request" $status $upstream_cache_status $body_bytes_sent $skip_cache';

proxy_cache_path /var/run/cache levels=1:2 keys_zone=PROXYCACHE:100m inactive=60m;
proxy_cache_key "$scheme$request_method$host$request_uri$device";

upstream unicorn_<%= @application[:domains].first %> {
 server unix:<%= @application[:deploy_to]%>/shared/sockets/unicorn.sock fail_timeout=0;
}

server {
  listen 80;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;

  <% if @application[:log_format] %>
    <% @application[:log_format].each do |log_format_name| %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.<%= log_format_name %>.log <%= log_format_name %>;
    <% end %>
  <% else %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.access.log;
  <%end %>
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.cache.log cache_status;

  keepalive_timeout 5;

  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx] && @application[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @application[:nginx][:client_max_body_size] %>;
  <% end %>

  location /health_check {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_next_upstream error;
    proxy_pass http://unicorn_<%= @application[:domains].first %>;
    break;
  }

  location / {
   # This not apply for environments that haven't ssl certificate
   #if ($http_x_forwarded_proto != 'https') {
   #  return 301 https://$server_name$request_uri;
   #}
   try_files $uri/index.html $uri/index.htm @unicorn;
   auth_basic "Restricted Content";
   auth_basic_user_file /etc/nginx/.htpasswd;
  }


  # Mejuri custom tweaks

  # CORS

  location ~* \.(eot|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
  }    

  rewrite ^/facebook$ https://www.facebook.com/mejuri;

  location = /channel.html {
      access_log off;
      expires max;
      add_header Pragma public;
      add_header Cache-Control "public";
  }


  # RFR (Redirect to new subdomain location)
  location ~ /rfr {
      rewrite  ^/(.*)$  http://rfr.mejuri.com/ permanent;
  }

  location ~ ^/assets/ {
      expires 1y;
      add_header Cache-Control public;

      add_header ETag "";
      gzip_static on; # to serve pre-gzipped version
      break;
  }


  location ~ ^/system/ {
        expires 1y;
        add_header Cache-Control public;

        #add_header ETag "";
        #gzip_static on;
        break;
    }

  location ~ /rfr {
        rewrite  ^/(.*)$  http://rfr.mejuri.com/ permanent;
  }

  location /blog/ {
      proxy_set_header X-Real-IP  $remote_addr;
      proxy_set_header X-Forwarded-For $remote_addr;
      proxy_set_header Host $host;
      proxy_pass http://192.241.134.47/;
  }    


  location @unicorn {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    set $skip_cache 0;
    if ($request_uri ~* "/shop/checkout|/shop/api|/user|/profile|/login") { set $skip_cache 1; }
    if ($request_method = POST) { set $skip_cache 1; }
    if ($query_string != "") { set $skip_cache 1; }
    #if ($http_cookie ~* "_mejuri_session") { set $skip_cache 1; }

    proxy_cache_bypass $skip_cache;
    proxy_no_cache $skip_cache;
    proxy_cache PROXYCACHE;
    proxy_cache_valid 10m;
    proxy_cache_use_stale error updating timeout invalid_header http_500;
    proxy_ignore_headers Cache-Control Expires Set-Cookie;
    proxy_pass_header Set-Cookie;
    add_header X-Cache $upstream_cache_status;

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  location /nginx_status {
    stub_status on;
    access_log off;
    allow 127.0.0.1;
    deny all;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }
}

<% if @application[:ssl_support] %>
server {
  listen   443;
  server_name <%= @application[:domains].join(" ") %> <%= node[:hostname] %>;
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>-ssl.access.log;
  access_log <%= node[:nginx][:log_dir] %>/<%= @application[:domains].first %>.cache.log cache_status;
  
  ssl on;
  ssl_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= @application[:domains].first %>.key;
  <% if @application[:ssl_certificate_ca] -%>
  ssl_client_certificate /etc/nginx/ssl/<%= @application[:domains].first %>.ca;
  <% end -%>

  keepalive_timeout 5;

  root <%= @application[:absolute_document_root] %>;

  <% if @application[:nginx] && @application[:nginx][:client_max_body_size] %>
    client_max_body_size <%= @application[:nginx][:client_max_body_size] %>;
  <% end %>

  location / {
    try_files $uri/index.html $uri/index.htm @unicorn;
  }

  location @unicorn {
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;

  <% if node[:nginx] && node[:nginx][:proxy_read_timeout] -%>
    proxy_read_timeout <%= node[:nginx][:proxy_read_timeout] %>;
  <% end -%>
  <% if node[:nginx] && node[:nginx][:proxy_send_timeout] -%>
    proxy_send_timeout <%= node[:nginx][:proxy_send_timeout] %>;
  <% end -%>

    set $skip_cache 0;
    if ($request_uri ~* "/shop/checkout|/shop/api|/user|/profile|/login") { set $skip_cache 1; }
    if ($request_method = POST) { set $skip_cache 1; }
    if ($query_string != "") { set $skip_cache 1; }
    #if ($http_cookie ~* "_mejuri_session") { set $skip_cache 1; }

    proxy_cache_bypass $skip_cache;
    proxy_no_cache $skip_cache;
    proxy_cache PROXYCACHE;
    proxy_cache_valid 10m;
    proxy_cache_use_stale error updating timeout invalid_header http_500;
    proxy_ignore_headers Cache-Control Expires Set-Cookie;
    proxy_pass_header Set-Cookie;
    add_header X-Cache $upstream_cache_status;

    # If you don't find the filename in the static files
    # Then request it from the unicorn server
    if (!-f $request_filename) {
      proxy_pass http://unicorn_<%= @application[:domains].first %>;
      break;
    }
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= @application[:absolute_document_root] %>;
  }
}
<% end %>
